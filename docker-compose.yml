services:
  db:
    image: postgres:16.1-alpine
    container_name: postgres-db
    restart: on-failure
    env_file:
      - .env
    ports:
      - "${POSTGRESQL_EXT_PORT}:${POSTGRESQL_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - postgres-db-data:/var/lib/postgresql/data

    backend:
      build: ./
      container_name: backend
      hostname: backend
      restart: on-failure
      env_file:
        - .env
      ports:
        - "8080:8080"
      environment:
        DB_HOST: db
        SERVER_PORT: 8080
        LOG_LEVEL: info
        SPRING_PROFILES_ACTIVE: test
      depends_on:
        db:
          condition: service_healthy

  zookeeper1:
    image: confluentinc/cp-zookeeper:7.9.0
    hostname: zookeeper1
    container_name: zookeeper1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker1:
    image: confluentinc/cp-kafka:7.9.0
    hostname: broker1
    container_name: broker1
    depends_on:
      zookeeper1:
        condition: service_started
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
volumes:
  postgres-db-data: