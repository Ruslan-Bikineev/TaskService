server:
  port: 8080
spring:
  config:
    activate:
      on-profile: default
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5435/TaskDB
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: none
  sql:
    init:
      mode: always
kafka:
  bootstrap-servers: localhost:9092
  topic:
    task-name: task_topic
  producer:
    enable: true
  consumer:
    group-id: task_group
    session-timeout: 10000
    max-partition-fetch-bytes: 1048576
    max-poll-records: 10
    max-poll-intervals: 3000
mail:
  host: ${MAIL_HOST}
  port: ${MAIL_PORT}
  username: ${MAIL_USERNAME}
  password: ${MAIL_PASSWORD}
  protocol: ${MAIL_PROTOCOL}
  to: ${MAIL_TO}
logging:
  config: classpath:logback-spring.xml
  level:
    root: info
---
server:
  port: ${SERVER_PORT}
spring:
  config:
    activate:
      on-profile: test
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${POSTGRESQL_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
  sql:
    init:
      mode: always
kafka:
  bootstrap-servers: ${KAFKA_HOST}:${KAFKA_PORT}
  topic:
    task-name: task_topic
  producer:
    enable: true
  consumer:
    group-id: task_group
    session-timeout: 10000
    max-partition-fetch-bytes: 1048576
    max-poll-records: 10
    max-poll-intervals: 3000
mail:
  host: ${MAIL_HOST}
  port: ${MAIL_PORT}
  username: ${MAIL_USERNAME}
  password: ${MAIL_PASSWORD}
  protocol: ${MAIL_PROTOCOL}
  to: ${MAIL_TO}
logging:
  config: classpath:logback-spring.xml
  level:
    root: ${LOG_LEVEL}